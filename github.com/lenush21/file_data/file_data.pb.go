// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: file_data.proto

package file_data

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_file_data_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*GetFileRequest_FileName
	//	*GetFileRequest_ChunkData
	Data isGetFileRequest_Data `protobuf_oneof:"data"`
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_file_data_proto_rawDescGZIP(), []int{1}
}

func (m *GetFileRequest) GetData() isGetFileRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GetFileRequest) GetFileName() string {
	if x, ok := x.GetData().(*GetFileRequest_FileName); ok {
		return x.FileName
	}
	return ""
}

func (x *GetFileRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*GetFileRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isGetFileRequest_Data interface {
	isGetFileRequest_Data()
}

type GetFileRequest_FileName struct {
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3,oneof"`
}

type GetFileRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*GetFileRequest_FileName) isGetFileRequest_Data() {}

func (*GetFileRequest_ChunkData) isGetFileRequest_Data() {}

type GetFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileChunk []byte `protobuf:"bytes,1,opt,name=file_chunk,json=fileChunk,proto3" json:"file_chunk,omitempty"`
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_file_data_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileResponse) GetFileChunk() []byte {
	if x != nil {
		return x.FileChunk
	}
	return nil
}

type GetFilesInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FileInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *GetFilesInfoResponse) Reset() {
	*x = GetFilesInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesInfoResponse) ProtoMessage() {}

func (x *GetFilesInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFilesInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_data_proto_rawDescGZIP(), []int{3}
}

func (x *GetFilesInfoResponse) GetInfos() []*FileInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_file_data_proto protoreflect.FileDescriptor

var file_file_data_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x58, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x32, 0x90, 0x02, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x59, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x22, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x0a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x12, 0x50, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6e, 0x75, 0x73, 0x68, 0x32, 0x31, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_data_proto_rawDescOnce sync.Once
	file_file_data_proto_rawDescData = file_file_data_proto_rawDesc
)

func file_file_data_proto_rawDescGZIP() []byte {
	file_file_data_proto_rawDescOnce.Do(func() {
		file_file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_data_proto_rawDescData)
	})
	return file_file_data_proto_rawDescData
}

var file_file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_file_data_proto_goTypes = []interface{}{
	(*FileInfo)(nil),              // 0: test_api.file_data.FileInfo
	(*GetFileRequest)(nil),        // 1: test_api.file_data.GetFileRequest
	(*GetFileResponse)(nil),       // 2: test_api.file_data.GetFileResponse
	(*GetFilesInfoResponse)(nil),  // 3: test_api.file_data.GetFilesInfoResponse
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_file_data_proto_depIdxs = []int32{
	4, // 0: test_api.file_data.FileInfo.created_at:type_name -> google.protobuf.Timestamp
	4, // 1: test_api.file_data.FileInfo.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: test_api.file_data.GetFilesInfoResponse.infos:type_name -> test_api.file_data.FileInfo
	1, // 3: test_api.file_data.FileData.DownloadFile:input_type -> test_api.file_data.GetFileRequest
	1, // 4: test_api.file_data.FileData.UploadFile:input_type -> test_api.file_data.GetFileRequest
	5, // 5: test_api.file_data.FileData.GetFilesInfo:input_type -> google.protobuf.Empty
	2, // 6: test_api.file_data.FileData.DownloadFile:output_type -> test_api.file_data.GetFileResponse
	2, // 7: test_api.file_data.FileData.UploadFile:output_type -> test_api.file_data.GetFileResponse
	3, // 8: test_api.file_data.FileData.GetFilesInfo:output_type -> test_api.file_data.GetFilesInfoResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_file_data_proto_init() }
func file_file_data_proto_init() {
	if File_file_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_file_data_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetFileRequest_FileName)(nil),
		(*GetFileRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_data_proto_goTypes,
		DependencyIndexes: file_file_data_proto_depIdxs,
		MessageInfos:      file_file_data_proto_msgTypes,
	}.Build()
	File_file_data_proto = out.File
	file_file_data_proto_rawDesc = nil
	file_file_data_proto_goTypes = nil
	file_file_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileDataClient is the client API for FileData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileDataClient interface {
	DownloadFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (FileData_DownloadFileClient, error)
	UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileData_UploadFileClient, error)
	GetFilesInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetFilesInfoResponse, error)
}

type fileDataClient struct {
	cc grpc.ClientConnInterface
}

func NewFileDataClient(cc grpc.ClientConnInterface) FileDataClient {
	return &fileDataClient{cc}
}

func (c *fileDataClient) DownloadFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (FileData_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileData_serviceDesc.Streams[0], "/test_api.file_data.FileData/DownloadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileDataDownloadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileData_DownloadFileClient interface {
	Recv() (*GetFileResponse, error)
	grpc.ClientStream
}

type fileDataDownloadFileClient struct {
	grpc.ClientStream
}

func (x *fileDataDownloadFileClient) Recv() (*GetFileResponse, error) {
	m := new(GetFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileDataClient) UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileData_UploadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileData_serviceDesc.Streams[1], "/test_api.file_data.FileData/UploadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileDataUploadFileClient{stream}
	return x, nil
}

type FileData_UploadFileClient interface {
	Send(*GetFileRequest) error
	CloseAndRecv() (*GetFileResponse, error)
	grpc.ClientStream
}

type fileDataUploadFileClient struct {
	grpc.ClientStream
}

func (x *fileDataUploadFileClient) Send(m *GetFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileDataUploadFileClient) CloseAndRecv() (*GetFileResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GetFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileDataClient) GetFilesInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetFilesInfoResponse, error) {
	out := new(GetFilesInfoResponse)
	err := c.cc.Invoke(ctx, "/test_api.file_data.FileData/GetFilesInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileDataServer is the server API for FileData service.
type FileDataServer interface {
	DownloadFile(*GetFileRequest, FileData_DownloadFileServer) error
	UploadFile(FileData_UploadFileServer) error
	GetFilesInfo(context.Context, *emptypb.Empty) (*GetFilesInfoResponse, error)
}

// UnimplementedFileDataServer can be embedded to have forward compatible implementations.
type UnimplementedFileDataServer struct {
}

func (*UnimplementedFileDataServer) DownloadFile(*GetFileRequest, FileData_DownloadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedFileDataServer) UploadFile(FileData_UploadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}
func (*UnimplementedFileDataServer) GetFilesInfo(context.Context, *emptypb.Empty) (*GetFilesInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilesInfo not implemented")
}

func RegisterFileDataServer(s *grpc.Server, srv FileDataServer) {
	s.RegisterService(&_FileData_serviceDesc, srv)
}

func _FileData_DownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileDataServer).DownloadFile(m, &fileDataDownloadFileServer{stream})
}

type FileData_DownloadFileServer interface {
	Send(*GetFileResponse) error
	grpc.ServerStream
}

type fileDataDownloadFileServer struct {
	grpc.ServerStream
}

func (x *fileDataDownloadFileServer) Send(m *GetFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _FileData_UploadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileDataServer).UploadFile(&fileDataUploadFileServer{stream})
}

type FileData_UploadFileServer interface {
	SendAndClose(*GetFileResponse) error
	Recv() (*GetFileRequest, error)
	grpc.ServerStream
}

type fileDataUploadFileServer struct {
	grpc.ServerStream
}

func (x *fileDataUploadFileServer) SendAndClose(m *GetFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileDataUploadFileServer) Recv() (*GetFileRequest, error) {
	m := new(GetFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FileData_GetFilesInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileDataServer).GetFilesInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test_api.file_data.FileData/GetFilesInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileDataServer).GetFilesInfo(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test_api.file_data.FileData",
	HandlerType: (*FileDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilesInfo",
			Handler:    _FileData_GetFilesInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DownloadFile",
			Handler:       _FileData_DownloadFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UploadFile",
			Handler:       _FileData_UploadFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "file_data.proto",
}
